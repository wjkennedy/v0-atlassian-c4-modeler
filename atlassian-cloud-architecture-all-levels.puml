

// ========== LANDSCAPE DIAGRAM ==========

@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Landscape.puml

title Atlassian Cloud Architecture - Enterprise Landscape - Landscape Diagram


Person(solution_partner, "Solution Partner", "Atlassian solution partner managing enterprise architecture")
Person(end_users, "End Users", "Development teams and business users")
Person(administrators, "System Administrators", "IT administrators managing the platform")
System(atlassian_ecosystem, "Atlassian Cloud Ecosystem", "Cloud SaaS", "Complete Atlassian Cloud platform with integrated products")
System(servicenow, "ServiceNow", "IT service management and workflow automation")
System(github, "GitHub", "Code repository and collaboration")
System(salesforce, "Salesforce", "Customer relationship management")
System(circleci, "CircleCI", "Continuous integration and delivery")
System(okta, "Okta", "Identity and access management")
System(google-workspace, "Google Workspace", "Google productivity and collaboration tools")
System(microsoft-teams, "Microsoft Teams", "Unified communication platform")
System(zoom, "Zoom", "Video conferencing and communication")

Rel(atlassian_ecosystem, servicenow, "Integrates with", "REST API/SOAP")
Rel(atlassian_ecosystem, github, "Integrates with", "REST API/Webhooks")
Rel(atlassian_ecosystem, salesforce, "Integrates with", "REST API/OAuth")
Rel(atlassian_ecosystem, circleci, "Integrates with", "REST API")
Rel(atlassian_ecosystem, okta, "Integrates with", "SAML/OAuth 2.0")
Rel(atlassian_ecosystem, google-workspace, "Integrates with", "REST API")
Rel(atlassian_ecosystem, microsoft-teams, "Integrates with", "Graph API/Webhooks")
Rel(atlassian_ecosystem, zoom, "Integrates with", "REST API/Webhooks")
Rel(solution_partner, atlassian_ecosystem, "Configures and manages")
Rel(end_users, atlassian_ecosystem, "Uses for daily work")
Rel(administrators, atlassian_ecosystem, "Administers and maintains")

@enduml

// ========== CONTEXT DIAGRAM ==========

@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml

title Atlassian Cloud Architecture - Context Diagram


Person(user, "Solution Partner", "Atlassian solution partner managing enterprise architecture")
System(atlassian_system, "Atlassian Cloud Platform", "Cloud SaaS", "Integrated suite of Atlassian Cloud products for enterprise collaboration")
System(servicenow, "ServiceNow", "IT service management and workflow automation")
System(github, "GitHub", "Code repository and collaboration")
System(salesforce, "Salesforce", "Customer relationship management")
System(circleci, "CircleCI", "Continuous integration and delivery")
System(okta, "Okta", "Identity and access management")
System(google-workspace, "Google Workspace", "Google productivity and collaboration tools")
System(microsoft-teams, "Microsoft Teams", "Unified communication platform")
System(zoom, "Zoom", "Video conferencing and communication")

Rel(atlassian_system, servicenow, "Integrates with", "REST API/SOAP")
Rel(atlassian_system, github, "Integrates with", "REST API/Webhooks")
Rel(atlassian_system, salesforce, "Integrates with", "REST API/OAuth")
Rel(atlassian_system, circleci, "Integrates with", "REST API")
Rel(atlassian_system, okta, "Integrates with", "SAML/OAuth 2.0")
Rel(atlassian_system, google-workspace, "Integrates with", "REST API")
Rel(atlassian_system, microsoft-teams, "Integrates with", "Graph API/Webhooks")
Rel(atlassian_system, zoom, "Integrates with", "REST API/Webhooks")
Rel(user, atlassian_system, "Uses for project management and collaboration")

@enduml

// ========== CONTAINER DIAGRAM ==========

@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Atlassian Cloud Architecture - Container Diagram


Person(user, "Solution Partner", "Atlassian solution partner managing enterprise architecture")
Container(jira-software, "Jira Software", "Atlassian Cloud", "Project management and issue tracking")
Container(jira-service-management, "Jira Service Management", "Atlassian Cloud", "IT service management platform")
Container(confluence, "Confluence", "Atlassian Cloud", "Team collaboration and documentation")
Container(atlas, "Atlas", "Atlassian Cloud", "Team directory and insights")
Container(compass, "Compass", "Atlassian Cloud", "Developer experience platform")
Container(jira-align, "Jira Align", "Atlassian Cloud", "Enterprise agile planning")
Container(bamboo, "Bamboo", "Atlassian Cloud", "Continuous integration and deployment")
Container(opsgenie, "Opsgenie", "Atlassian Cloud", "Incident management and alerting")
Container(database-analytics, "Analytics Database", "Atlassian Cloud", "Data warehouse and analytics")
Container(cicd_pipeline, "CI/CD Pipeline", "Jenkins/GitHub Actions/Azure DevOps", "Automated build, test, and deployment pipeline")
Container(artifact_repo, "Artifact Repository", "Docker Registry/Nexus/Azure Artifacts", "Stores build artifacts and deployment packages")
Container(deployment_tracker, "Deployment Tracker", "Custom Service", "Tracks deployment status and release information")
Container(primary_database, "Primary Database", "PostgreSQL/MySQL", "Main application database for Atlassian products")
System(servicenow, "ServiceNow", "IT service management and workflow automation")
System(salesforce, "Salesforce", "Customer relationship management")
System(circleci, "CircleCI", "Continuous integration and delivery")
System(okta, "Okta", "Identity and access management")
System(google-workspace, "Google Workspace", "Google productivity and collaboration tools")
System(microsoft-teams, "Microsoft Teams", "Unified communication platform")
System(zoom, "Zoom", "Video conferencing and communication")

Rel(user, jira-software, "Uses", "HTTPS/Web UI")
Rel(user, jira-service-management, "Uses", "HTTPS/Web UI")
Rel(user, confluence, "Uses", "HTTPS/Web UI")
Rel(user, atlas, "Uses", "HTTPS/Web UI")
Rel(user, compass, "Uses", "HTTPS/Web UI")
Rel(user, jira-align, "Uses", "HTTPS/Web UI")
Rel(user, bamboo, "Uses", "HTTPS/Web UI")
Rel(user, opsgenie, "Uses", "HTTPS/Web UI")
Rel(user, database-analytics, "Uses", "HTTPS/Web UI")
Rel(github, cicd_pipeline, "Triggers builds on code changes", "Webhooks")
Rel(cicd_pipeline, artifact_repo, "Stores build artifacts", "REST API")
Rel(cicd_pipeline, deployment_tracker, "Reports deployment status", "REST API")
Rel(deployment_tracker, jira-software, "Updates issue status and deployment info", "REST API")
Rel(jira-software, primary_database, "Reads from and writes to", "JDBC/SQL")
Rel(jira-service-management, primary_database, "Reads from and writes to", "JDBC/SQL")
Rel(confluence, primary_database, "Reads from and writes to", "JDBC/SQL")
Rel(jira-software, servicenow, "Integrates with", "REST API/SOAP")
Rel(jira-software, salesforce, "Integrates with", "REST API/OAuth")
Rel(jira-software, circleci, "Integrates with", "REST API")
Rel(jira-software, okta, "Integrates with", "SAML/OAuth 2.0")
Rel(jira-software, google-workspace, "Integrates with", "REST API")
Rel(jira-software, microsoft-teams, "Integrates with", "Graph API/Webhooks")
Rel(jira-software, zoom, "Integrates with", "REST API/Webhooks")

@enduml

// ========== COMPONENT DIAGRAM ==========

@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Atlassian Cloud Architecture - Component Diagram


Person(user, "Solution Partner", "Atlassian solution partner managing enterprise architecture")
Component(web_controller, "Web Controller", "Spring MVC", "Handles HTTP requests and responses")
Component(business_logic, "Business Logic", "Java Services", "Core issue management and workflow logic")
Component(data_access, "Data Access Layer", "JPA/Hibernate", "Database operations and queries")
Component(notification_service, "Notification Service", "Message Queue", "Handles email and in-app notifications")
Container(database, "Database", "PostgreSQL", "Application database")
Component(webhook_handler, "Webhook Handler", "REST API", "Processes incoming webhooks from CI/CD systems")
Component(deployment_tracker, "Deployment Tracker", "Background Service", "Tracks deployment status and updates issues")

Rel(user, web_controller, "Makes requests to", "HTTPS")
Rel(web_controller, business_logic, "Uses")
Rel(business_logic, data_access, "Uses")
Rel(data_access, database, "Reads from and writes to", "JDBC/SQL")
Rel(webhook_handler, deployment_tracker, "Triggers")
Rel(deployment_tracker, business_logic, "Updates issue status via")

@enduml

// ========== CODE DIAGRAM ==========

@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

title Atlassian Cloud Architecture - Code Diagram


Component(IssueController, "IssueController", "Java/Spring", "REST controller for issue operations")
Component(IssueService, "IssueService", "Java", "Business logic for issue management")
Component(IssueRepository, "IssueRepository", "JPA/Hibernate", "Data access layer for issues")
Component(Issue, "Issue", "Java Entity", "Domain model representing an issue")

Rel(IssueController, IssueService, "Uses")
Rel(IssueService, IssueRepository, "Uses")
Rel(IssueRepository, Issue, "Manages")

@enduml